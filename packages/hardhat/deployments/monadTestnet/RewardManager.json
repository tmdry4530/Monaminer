{
  "address": "0xE0F15D16E0666bC625b938Cd48a636e0506e5A7A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mmToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_devWallet",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "devFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "BasicRewardDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "CompletionBonusDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "devWallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "DevFeeCollected",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BASIC_REWARD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "COMPLETION_BONUS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEV_FEE_PERCENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "players",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "batchDistributeRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "successCount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "completedMining",
          "type": "bool"
        }
      ],
      "name": "calculateRevenueProjection",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalPlayerReward",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDevFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalCost",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "devWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "distributeBasicReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "distributeCompletionBonus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "fundContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDetailedStats",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalBasicRewards",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalCompletionBonuses",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalDevFees",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalDistributed",
              "type": "uint256"
            }
          ],
          "internalType": "struct RewardManager.RewardStats",
          "name": "stats",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "contractBalance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalPlayers",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "getPlayerStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalEarned",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "basicRewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "completionBonuses",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "miningEngine",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mmToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerBasicRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerCompletionBonuses",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "playerTotalEarned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalBasicRewards",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalCompletionBonuses",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDevFees",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalDistributed",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_devWallet",
          "type": "address"
        }
      ],
      "name": "setDevWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_mmToken",
          "type": "address"
        }
      ],
      "name": "setMMToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_miningEngine",
          "type": "address"
        }
      ],
      "name": "setMiningEngine",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "investmentCost",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "expectedSuccesses",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "willComplete",
          "type": "bool"
        }
      ],
      "name": "simulateROI",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalRevenue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "netProfit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "roiPercent",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf224f37d099ba27836289bd4dc465d99372f2ec16829080e05c4986730f8beb2",
  "receipt": {
    "to": null,
    "from": "0x038F9EFF208F4cefc0a7f856739a3405c419A147",
    "contractAddress": "0xE0F15D16E0666bC625b938Cd48a636e0506e5A7A",
    "transactionIndex": 41,
    "gasUsed": "1328157",
    "logsBloom": "0x
    "blockHash": "0xf2359740544e60d4fada7556de0bcb846c512daf4b175217df52d6855a9853c6",
    "transactionHash": "0xf224f37d099ba27836289bd4dc465d99372f2ec16829080e05c4986730f8beb2",
    "logs": [
      {
        "transactionIndex": 41,
        "blockNumber": 25871681,
        "transactionHash": "0xf224f37d099ba27836289bd4dc465d99372f2ec16829080e05c4986730f8beb2",
        "address": "0xE0F15D16E0666bC625b938Cd48a636e0506e5A7A",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000038f9eff208f4cefc0a7f856739a3405c419a147"
        ],
        "data": "0x",
        "logIndex": 104,
        "blockHash": "0xf2359740544e60d4fada7556de0bcb846c512daf4b175217df52d6855a9853c6"
      }
    ],
    "blockNumber": 25871681,
    "cumulativeGasUsed": "13475055",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xe719FA04EEf22ff2F5c9f2f0817BD5E0a750B6F1",
    "0x038F9EFF208F4cefc0a7f856739a3405c419A147"
  ],
  "numDeployments": 2,
  "solcInputHash": "fd325614a800ce684fbd8b02f96bddf2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mmToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_devWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"devFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BasicRewardDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"CompletionBonusDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"devWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DevFeeCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIC_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMPLETION_BONUS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEV_FEE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"players\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchDistributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"successCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completedMining\",\"type\":\"bool\"}],\"name\":\"calculateRevenueProjection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalPlayerReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDevFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCost\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"devWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"distributeBasicReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"distributeCompletionBonus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fundContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDetailedStats\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalBasicRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCompletionBonuses\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDevFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"}],\"internalType\":\"struct RewardManager.RewardStats\",\"name\":\"stats\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"contractBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPlayers\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getPlayerStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"basicRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"completionBonuses\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"miningEngine\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mmToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerBasicRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerCompletionBonuses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerTotalEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBasicRewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCompletionBonuses\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDevFees\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDistributed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_devWallet\",\"type\":\"address\"}],\"name\":\"setDevWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mmToken\",\"type\":\"address\"}],\"name\":\"setMMToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_miningEngine\",\"type\":\"address\"}],\"name\":\"setMiningEngine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"investmentCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expectedSuccesses\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"willComplete\",\"type\":\"bool\"}],\"name\":\"simulateROI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalRevenue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"netProfit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"roiPercent\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RewardManager.sol\":\"RewardManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\"},\"contracts/RewardManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\ncontract RewardManager is Ownable, ReentrancyGuard {\\n    IERC20 public mmToken;\\n\\n    uint256 public constant BASIC_REWARD = 30 ether; // 30 MM per success\\n    uint256 public constant COMPLETION_BONUS = 500 ether; // 500 MM for completion\\n    uint256 public constant DEV_FEE_PERCENT = 10; // 10% dev fee\\n\\n    address public devWallet;\\n    address public miningEngine;\\n\\n    struct RewardStats {\\n        uint256 totalBasicRewards;\\n        uint256 totalCompletionBonuses;\\n        uint256 totalDevFees;\\n        uint256 totalDistributed;\\n    }\\n\\n    mapping(address => uint256) public playerTotalEarned;\\n    mapping(address => uint256) public playerBasicRewards;\\n    mapping(address => uint256) public playerCompletionBonuses;\\n\\n    RewardStats public rewardStats;\\n\\n    event BasicRewardDistributed(address indexed player, uint256 amount, uint256 devFee, uint256 timestamp);\\n\\n    event CompletionBonusDistributed(address indexed player, uint256 amount, uint256 timestamp);\\n\\n    event DevFeeCollected(address indexed devWallet, uint256 amount, uint256 timestamp);\\n\\n    modifier onlyMiningEngine() {\\n        require(msg.sender == miningEngine, \\\"Only mining engine\\\");\\n        _;\\n    }\\n\\n    constructor(address _mmToken, address _devWallet) Ownable(msg.sender) {\\n        mmToken = IERC20(_mmToken);\\n        devWallet = _devWallet;\\n    }\\n\\n    function distributeBasicReward(address player) external onlyMiningEngine nonReentrant {\\n        require(player != address(0), \\\"Invalid player address\\\");\\n\\n        uint256 devFee = (BASIC_REWARD * DEV_FEE_PERCENT) / 100;\\n        uint256 playerReward = BASIC_REWARD - devFee;\\n\\n        // \\ud50c\\ub808\\uc774\\uc5b4\\uc5d0\\uac8c \\ubcf4\\uc0c1 \\uc9c0\\uae09\\n        require(mmToken.transfer(player, playerReward), \\\"Player reward transfer failed\\\");\\n\\n        // \\uac1c\\ubc1c\\ud300\\uc5d0\\uac8c \\uc218\\uc218\\ub8cc \\uc9c0\\uae09\\n        require(mmToken.transfer(devWallet, devFee), \\\"Dev fee transfer failed\\\");\\n\\n        // \\ud1b5\\uacc4 \\uc5c5\\ub370\\uc774\\ud2b8\\n        playerTotalEarned[player] += playerReward;\\n        playerBasicRewards[player] += playerReward;\\n\\n        rewardStats.totalBasicRewards += playerReward;\\n        rewardStats.totalDevFees += devFee;\\n        rewardStats.totalDistributed += BASIC_REWARD;\\n\\n        emit BasicRewardDistributed(player, playerReward, devFee, block.timestamp);\\n        emit DevFeeCollected(devWallet, devFee, block.timestamp);\\n    }\\n\\n    function distributeCompletionBonus(address player) external onlyMiningEngine nonReentrant {\\n        require(player != address(0), \\\"Invalid player address\\\");\\n\\n        // \\uc644\\uc8fc \\ubcf4\\ub108\\uc2a4\\ub294 \\uac1c\\ubc1c\\ud300 \\uc218\\uc218\\ub8cc \\uc5c6\\uc774 \\uc804\\uc561 \\uc9c0\\uae09\\n        require(mmToken.transfer(player, COMPLETION_BONUS), \\\"Completion bonus transfer failed\\\");\\n\\n        // \\ud1b5\\uacc4 \\uc5c5\\ub370\\uc774\\ud2b8\\n        playerTotalEarned[player] += COMPLETION_BONUS;\\n        playerCompletionBonuses[player] += COMPLETION_BONUS;\\n\\n        rewardStats.totalCompletionBonuses += COMPLETION_BONUS;\\n        rewardStats.totalDistributed += COMPLETION_BONUS;\\n\\n        emit CompletionBonusDistributed(player, COMPLETION_BONUS, block.timestamp);\\n    }\\n\\n    function batchDistributeRewards(address[] calldata players, uint256[] calldata amounts) external onlyOwner {\\n        require(players.length == amounts.length, \\\"Arrays length mismatch\\\");\\n\\n        for (uint256 i = 0; i < players.length; i++) {\\n            require(mmToken.transfer(players[i], amounts[i]), \\\"Batch transfer failed\\\");\\n            playerTotalEarned[players[i]] += amounts[i];\\n            rewardStats.totalDistributed += amounts[i];\\n        }\\n    }\\n\\n    function emergencyWithdraw(address to, uint256 amount) external onlyOwner {\\n        require(mmToken.transfer(to, amount), \\\"Emergency withdrawal failed\\\");\\n    }\\n\\n    function getPlayerStats(\\n        address player\\n    ) external view returns (uint256 totalEarned, uint256 basicRewards, uint256 completionBonuses) {\\n        return (playerTotalEarned[player], playerBasicRewards[player], playerCompletionBonuses[player]);\\n    }\\n\\n    function getContractBalance() external view returns (uint256) {\\n        return mmToken.balanceOf(address(this));\\n    }\\n\\n    function simulateROI(\\n        uint256 investmentCost,\\n        uint256 expectedSuccesses,\\n        bool willComplete\\n    ) external pure returns (uint256 totalRevenue, uint256 netProfit, uint256 roiPercent) {\\n        uint256 completionBonusTotal = willComplete ? COMPLETION_BONUS : 0;\\n\\n        totalRevenue =\\n            (expectedSuccesses * (BASIC_REWARD - (BASIC_REWARD * DEV_FEE_PERCENT) / 100)) +\\n            completionBonusTotal;\\n\\n        if (totalRevenue >= investmentCost) {\\n            netProfit = totalRevenue - investmentCost;\\n            roiPercent = (netProfit * 100) / investmentCost;\\n        } else {\\n            netProfit = 0;\\n            roiPercent = 0;\\n        }\\n\\n        return (totalRevenue, netProfit, roiPercent);\\n    }\\n\\n    function calculateRevenueProjection(\\n        uint256 successCount,\\n        bool completedMining\\n    ) external pure returns (uint256 totalPlayerReward, uint256 totalDevFee, uint256 totalCost) {\\n        uint256 basicRewardTotal = successCount * BASIC_REWARD;\\n        uint256 completionBonusTotal = completedMining ? COMPLETION_BONUS : 0;\\n\\n        totalPlayerReward =\\n            (successCount * (BASIC_REWARD - (BASIC_REWARD * DEV_FEE_PERCENT) / 100)) +\\n            completionBonusTotal;\\n        totalDevFee = (successCount * (BASIC_REWARD * DEV_FEE_PERCENT)) / 100;\\n        totalCost = basicRewardTotal + completionBonusTotal;\\n\\n        return (totalPlayerReward, totalDevFee, totalCost);\\n    }\\n\\n    // Admin functions\\n    function setMMToken(address _mmToken) external onlyOwner {\\n        mmToken = IERC20(_mmToken);\\n    }\\n\\n    function setDevWallet(address _devWallet) external onlyOwner {\\n        devWallet = _devWallet;\\n    }\\n\\n    function setMiningEngine(address _miningEngine) external onlyOwner {\\n        miningEngine = _miningEngine;\\n    }\\n\\n    function fundContract(uint256 amount) external onlyOwner {\\n        require(mmToken.transferFrom(msg.sender, address(this), amount), \\\"Funding failed\\\");\\n    }\\n\\n    function getDetailedStats()\\n        external\\n        view\\n        returns (RewardStats memory stats, uint256 contractBalance, uint256 totalPlayers)\\n    {\\n        return (\\n            rewardStats,\\n            mmToken.balanceOf(address(this)),\\n            0 // totalPlayers\\ub294 \\ubcc4\\ub3c4 \\uce74\\uc6b4\\ud130 \\ud544\\uc694\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x15f9a3006562905f5d4b01684fb3f40b183ea6f63fcd87d4d5d3c66d9d8e4ebf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620016763803806200167683398101604081905262000034916200010a565b33806200005b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000066816200009d565b5060018055600280546001600160a01b039384166001600160a01b0319918216179091556003805492909316911617905562000142565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200010557600080fd5b919050565b600080604083850312156200011e57600080fd5b6200012983620000ed565b91506200013960208401620000ed565b90509250929050565b61152480620001526000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063747dd813116100de57806395ccea6711610097578063df49f66311610071578063df49f663146103fe578063e3508dd514610411578063f2fde38b14610421578063ff6586611461043457600080fd5b806395ccea67146103c5578063a890dd90146103d8578063d98ec807146103eb57600080fd5b8063747dd8131461033757806386bc006e146103575780638da5cb5b146103675780638ea5220f1461038c5780639204d5de1461039f57806394ad7e37146103b257600080fd5b806348789ba81161014b5780635e6a645e116101255780635e6a645e146102e95780636f9fb98a146102f1578063715018a6146102f957806371c6c44e1461030157600080fd5b806348789ba8146102765780634a74c267146102895780634fd66eae146102a957600080fd5b80630c57971a1461019357806315e5736f146101a85780631f53ac02146101db5780633519a2f8146101ee5780633fa1a6401461020157806344a0cceb1461022f575b600080fd5b6101a66101a136600461127a565b610447565b005b6101bb6101b63660046112aa565b610806565b604080519384526020840192909252908201526060015b60405180910390f35b6101a66101e936600461127a565b6108b2565b6101a66101fc3660046112e3565b6108dc565b61022161020f36600461127a565b60056020526000908152604090205481565b6040519081526020016101d2565b61023761099c565b604080518451815260208086015190820152848201519181019190915260609384015193810193909352608083019190915260a082015260c0016101d2565b6101bb6102843660046112fc565b610a75565b61022161029736600461127a565b60076020526000908152604090205481565b6101bb6102b736600461127a565b6001600160a01b0316600090815260056020908152604080832054600683528184205460079093529220549192909190565b610221600a81565b610221610b35565b6101a6610ba7565b600854600954600a54600b546103179392919084565b6040805194855260208501939093529183015260608201526080016101d2565b61022161034536600461127a565b60066020526000908152604090205481565b6102216801a055690d9db8000081565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101d2565b600354610374906001600160a01b031681565b6101a66103ad36600461127a565b610bbb565b6101a66103c0366004611378565b610be5565b6101a66103d33660046113e4565b610e0b565b600254610374906001600160a01b031681565b600454610374906001600160a01b031681565b6101a661040c36600461127a565b610eda565b610221681b1ae4d6e2ef50000081565b6101a661042f36600461127a565b611152565b6101a661044236600461127a565b61118d565b6004546001600160a01b0316331461049b5760405162461bcd60e51b81526020600482015260126024820152714f6e6c79206d696e696e6720656e67696e6560701b60448201526064015b60405180910390fd5b6104a36111b7565b6001600160a01b0381166104f25760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420706c61796572206164647265737360501b6044820152606401610492565b6000606461050a600a6801a055690d9db80000611424565b6105149190611441565b9050600061052b826801a055690d9db80000611463565b60025460405163a9059cbb60e01b81526001600160a01b0386811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a49190611476565b6105f05760405162461bcd60e51b815260206004820152601d60248201527f506c6179657220726577617264207472616e73666572206661696c65640000006044820152606401610492565b60025460035460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af1158015610645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106699190611476565b6106b55760405162461bcd60e51b815260206004820152601760248201527f44657620666565207472616e73666572206661696c65640000000000000000006044820152606401610492565b6001600160a01b038316600090815260056020526040812080548392906106dd908490611493565b90915550506001600160a01b0383166000908152600660205260408120805483929061070a908490611493565b909155505060088054829190600090610724908490611493565b9091555050600a805483919060009061073e908490611493565b9091555050600b80546801a055690d9db800009190600090610761908490611493565b90915550506040805182815260208101849052428183015290516001600160a01b038516917fbe8f591dd1ea862711af12100509e4cc4a74ac33ee34421cf8781ffa59d6c9a8919081900360600190a2600354604080518481524260208201526001600160a01b03909216917f6099a95423b618bf15ad85f3d30d1f5a8fa175f01ed7cbfd6a9606eefa398afd910160405180910390a2505061080360018055565b50565b60008060008084610818576000610823565b681b1ae4d6e2ef5000005b905080606461083c600a6801a055690d9db80000611424565b6108469190611441565b610859906801a055690d9db80000611463565b6108639088611424565b61086d9190611493565b935086841061089f576108808785611463565b92508661088e846064611424565b6108989190611441565b91506108a8565b60009250600091505b5093509350939050565b6108ba6111e1565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6108e46111e1565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190611476565b6108035760405162461bcd60e51b815260206004820152600e60248201526d119d5b991a5b99c819985a5b195960921b6044820152606401610492565b6109c76040518060800160405280600081526020016000815260200160008152602001600081525090565b6002546040516370a0823160e01b815230600482015260009182916008916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3991906114a6565b60408051608081018252835481526001840154602082015260028401549181019190915260039092015460608301529094909350600092509050565b6000808080610a8d6801a055690d9db8000087611424565b9050600085610a9d576000610aa8565b681b1ae4d6e2ef5000005b9050806064610ac1600a6801a055690d9db80000611424565b610acb9190611441565b610ade906801a055690d9db80000611463565b610ae89089611424565b610af29190611493565b94506064610b0a600a6801a055690d9db80000611424565b610b149089611424565b610b1e9190611441565b9350610b2a8183611493565b925050509250925092565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba291906114a6565b905090565b610baf6111e1565b610bb9600061120e565b565b610bc36111e1565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610bed6111e1565b828114610c355760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606401610492565b60005b83811015610e04576002546001600160a01b031663a9059cbb868684818110610c6357610c636114bf565b9050602002016020810190610c78919061127a565b858585818110610c8a57610c8a6114bf565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610cde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d029190611476565b610d465760405162461bcd60e51b815260206004820152601560248201527410985d18da081d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610492565b828282818110610d5857610d586114bf565b9050602002013560056000878785818110610d7557610d756114bf565b9050602002016020810190610d8a919061127a565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610db99190611493565b909155508390508282818110610dd157610dd16114bf565b9050602002013560086003016000828254610dec9190611493565b90915550819050610dfc816114d5565b915050610c38565b5050505050565b610e136111e1565b60025460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610e66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8a9190611476565b610ed65760405162461bcd60e51b815260206004820152601b60248201527f456d657267656e6379207769746864726177616c206661696c656400000000006044820152606401610492565b5050565b6004546001600160a01b03163314610f295760405162461bcd60e51b81526020600482015260126024820152714f6e6c79206d696e696e6720656e67696e6560701b6044820152606401610492565b610f316111b7565b6001600160a01b038116610f805760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420706c61796572206164647265737360501b6044820152606401610492565b60025460405163a9059cbb60e01b81526001600160a01b038381166004830152681b1ae4d6e2ef50000060248301529091169063a9059cbb906044016020604051808303816000875af1158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fff9190611476565b61104b5760405162461bcd60e51b815260206004820181905260248201527f436f6d706c6574696f6e20626f6e7573207472616e73666572206661696c65646044820152606401610492565b6001600160a01b03811660009081526005602052604081208054681b1ae4d6e2ef500000929061107c908490611493565b90915550506001600160a01b03811660009081526007602052604081208054681b1ae4d6e2ef50000092906110b2908490611493565b909155505060098054681b1ae4d6e2ef50000091906000906110d5908490611493565b9091555050600b8054681b1ae4d6e2ef50000091906000906110f8908490611493565b909155505060408051681b1ae4d6e2ef50000081524260208201526001600160a01b038316917faf783e0c33a5d7eef8663331c83a8e4b7c41d75ac4d6167021597abb9e2a6449910160405180910390a261080360018055565b61115a6111e1565b6001600160a01b03811661118457604051631e4fbdf760e01b815260006004820152602401610492565b6108038161120e565b6111956111e1565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154036111da57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6000546001600160a01b03163314610bb95760405163118cdaa760e01b8152336004820152602401610492565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461127557600080fd5b919050565b60006020828403121561128c57600080fd5b6112958261125e565b9392505050565b801515811461080357600080fd5b6000806000606084860312156112bf57600080fd5b833592506020840135915060408401356112d88161129c565b809150509250925092565b6000602082840312156112f557600080fd5b5035919050565b6000806040838503121561130f57600080fd5b8235915060208301356113218161129c565b809150509250929050565b60008083601f84011261133e57600080fd5b50813567ffffffffffffffff81111561135657600080fd5b6020830191508360208260051b850101111561137157600080fd5b9250929050565b6000806000806040858703121561138e57600080fd5b843567ffffffffffffffff808211156113a657600080fd5b6113b28883890161132c565b909650945060208701359150808211156113cb57600080fd5b506113d88782880161132c565b95989497509550505050565b600080604083850312156113f757600080fd5b6114008361125e565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761143b5761143b61140e565b92915050565b60008261145e57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561143b5761143b61140e565b60006020828403121561148857600080fd5b81516112958161129c565b8082018082111561143b5761143b61140e565b6000602082840312156114b857600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000600182016114e7576114e761140e565b506001019056fea26469706673582212205bd1b916d5ac47c41b7ca870f205bba8c97b1644a6e164009dd136901ac6b7b164736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c8063747dd813116100de57806395ccea6711610097578063df49f66311610071578063df49f663146103fe578063e3508dd514610411578063f2fde38b14610421578063ff6586611461043457600080fd5b806395ccea67146103c5578063a890dd90146103d8578063d98ec807146103eb57600080fd5b8063747dd8131461033757806386bc006e146103575780638da5cb5b146103675780638ea5220f1461038c5780639204d5de1461039f57806394ad7e37146103b257600080fd5b806348789ba81161014b5780635e6a645e116101255780635e6a645e146102e95780636f9fb98a146102f1578063715018a6146102f957806371c6c44e1461030157600080fd5b806348789ba8146102765780634a74c267146102895780634fd66eae146102a957600080fd5b80630c57971a1461019357806315e5736f146101a85780631f53ac02146101db5780633519a2f8146101ee5780633fa1a6401461020157806344a0cceb1461022f575b600080fd5b6101a66101a136600461127a565b610447565b005b6101bb6101b63660046112aa565b610806565b604080519384526020840192909252908201526060015b60405180910390f35b6101a66101e936600461127a565b6108b2565b6101a66101fc3660046112e3565b6108dc565b61022161020f36600461127a565b60056020526000908152604090205481565b6040519081526020016101d2565b61023761099c565b604080518451815260208086015190820152848201519181019190915260609384015193810193909352608083019190915260a082015260c0016101d2565b6101bb6102843660046112fc565b610a75565b61022161029736600461127a565b60076020526000908152604090205481565b6101bb6102b736600461127a565b6001600160a01b0316600090815260056020908152604080832054600683528184205460079093529220549192909190565b610221600a81565b610221610b35565b6101a6610ba7565b600854600954600a54600b546103179392919084565b6040805194855260208501939093529183015260608201526080016101d2565b61022161034536600461127a565b60066020526000908152604090205481565b6102216801a055690d9db8000081565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101d2565b600354610374906001600160a01b031681565b6101a66103ad36600461127a565b610bbb565b6101a66103c0366004611378565b610be5565b6101a66103d33660046113e4565b610e0b565b600254610374906001600160a01b031681565b600454610374906001600160a01b031681565b6101a661040c36600461127a565b610eda565b610221681b1ae4d6e2ef50000081565b6101a661042f36600461127a565b611152565b6101a661044236600461127a565b61118d565b6004546001600160a01b0316331461049b5760405162461bcd60e51b81526020600482015260126024820152714f6e6c79206d696e696e6720656e67696e6560701b60448201526064015b60405180910390fd5b6104a36111b7565b6001600160a01b0381166104f25760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420706c61796572206164647265737360501b6044820152606401610492565b6000606461050a600a6801a055690d9db80000611424565b6105149190611441565b9050600061052b826801a055690d9db80000611463565b60025460405163a9059cbb60e01b81526001600160a01b0386811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a49190611476565b6105f05760405162461bcd60e51b815260206004820152601d60248201527f506c6179657220726577617264207472616e73666572206661696c65640000006044820152606401610492565b60025460035460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af1158015610645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106699190611476565b6106b55760405162461bcd60e51b815260206004820152601760248201527f44657620666565207472616e73666572206661696c65640000000000000000006044820152606401610492565b6001600160a01b038316600090815260056020526040812080548392906106dd908490611493565b90915550506001600160a01b0383166000908152600660205260408120805483929061070a908490611493565b909155505060088054829190600090610724908490611493565b9091555050600a805483919060009061073e908490611493565b9091555050600b80546801a055690d9db800009190600090610761908490611493565b90915550506040805182815260208101849052428183015290516001600160a01b038516917fbe8f591dd1ea862711af12100509e4cc4a74ac33ee34421cf8781ffa59d6c9a8919081900360600190a2600354604080518481524260208201526001600160a01b03909216917f6099a95423b618bf15ad85f3d30d1f5a8fa175f01ed7cbfd6a9606eefa398afd910160405180910390a2505061080360018055565b50565b60008060008084610818576000610823565b681b1ae4d6e2ef5000005b905080606461083c600a6801a055690d9db80000611424565b6108469190611441565b610859906801a055690d9db80000611463565b6108639088611424565b61086d9190611493565b935086841061089f576108808785611463565b92508661088e846064611424565b6108989190611441565b91506108a8565b60009250600091505b5093509350939050565b6108ba6111e1565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6108e46111e1565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561093b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095f9190611476565b6108035760405162461bcd60e51b815260206004820152600e60248201526d119d5b991a5b99c819985a5b195960921b6044820152606401610492565b6109c76040518060800160405280600081526020016000815260200160008152602001600081525090565b6002546040516370a0823160e01b815230600482015260009182916008916001600160a01b0316906370a0823190602401602060405180830381865afa158015610a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3991906114a6565b60408051608081018252835481526001840154602082015260028401549181019190915260039092015460608301529094909350600092509050565b6000808080610a8d6801a055690d9db8000087611424565b9050600085610a9d576000610aa8565b681b1ae4d6e2ef5000005b9050806064610ac1600a6801a055690d9db80000611424565b610acb9190611441565b610ade906801a055690d9db80000611463565b610ae89089611424565b610af29190611493565b94506064610b0a600a6801a055690d9db80000611424565b610b149089611424565b610b1e9190611441565b9350610b2a8183611493565b925050509250925092565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba291906114a6565b905090565b610baf6111e1565b610bb9600061120e565b565b610bc36111e1565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610bed6111e1565b828114610c355760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606401610492565b60005b83811015610e04576002546001600160a01b031663a9059cbb868684818110610c6357610c636114bf565b9050602002016020810190610c78919061127a565b858585818110610c8a57610c8a6114bf565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610cde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d029190611476565b610d465760405162461bcd60e51b815260206004820152601560248201527410985d18da081d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610492565b828282818110610d5857610d586114bf565b9050602002013560056000878785818110610d7557610d756114bf565b9050602002016020810190610d8a919061127a565b6001600160a01b03166001600160a01b031681526020019081526020016000206000828254610db99190611493565b909155508390508282818110610dd157610dd16114bf565b9050602002013560086003016000828254610dec9190611493565b90915550819050610dfc816114d5565b915050610c38565b5050505050565b610e136111e1565b60025460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb906044016020604051808303816000875af1158015610e66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e8a9190611476565b610ed65760405162461bcd60e51b815260206004820152601b60248201527f456d657267656e6379207769746864726177616c206661696c656400000000006044820152606401610492565b5050565b6004546001600160a01b03163314610f295760405162461bcd60e51b81526020600482015260126024820152714f6e6c79206d696e696e6720656e67696e6560701b6044820152606401610492565b610f316111b7565b6001600160a01b038116610f805760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420706c61796572206164647265737360501b6044820152606401610492565b60025460405163a9059cbb60e01b81526001600160a01b038381166004830152681b1ae4d6e2ef50000060248301529091169063a9059cbb906044016020604051808303816000875af1158015610fdb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fff9190611476565b61104b5760405162461bcd60e51b815260206004820181905260248201527f436f6d706c6574696f6e20626f6e7573207472616e73666572206661696c65646044820152606401610492565b6001600160a01b03811660009081526005602052604081208054681b1ae4d6e2ef500000929061107c908490611493565b90915550506001600160a01b03811660009081526007602052604081208054681b1ae4d6e2ef50000092906110b2908490611493565b909155505060098054681b1ae4d6e2ef50000091906000906110d5908490611493565b9091555050600b8054681b1ae4d6e2ef50000091906000906110f8908490611493565b909155505060408051681b1ae4d6e2ef50000081524260208201526001600160a01b038316917faf783e0c33a5d7eef8663331c83a8e4b7c41d75ac4d6167021597abb9e2a6449910160405180910390a261080360018055565b61115a6111e1565b6001600160a01b03811661118457604051631e4fbdf760e01b815260006004820152602401610492565b6108038161120e565b6111956111e1565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6002600154036111da57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6000546001600160a01b03163314610bb95760405163118cdaa760e01b8152336004820152602401610492565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461127557600080fd5b919050565b60006020828403121561128c57600080fd5b6112958261125e565b9392505050565b801515811461080357600080fd5b6000806000606084860312156112bf57600080fd5b833592506020840135915060408401356112d88161129c565b809150509250925092565b6000602082840312156112f557600080fd5b5035919050565b6000806040838503121561130f57600080fd5b8235915060208301356113218161129c565b809150509250929050565b60008083601f84011261133e57600080fd5b50813567ffffffffffffffff81111561135657600080fd5b6020830191508360208260051b850101111561137157600080fd5b9250929050565b6000806000806040858703121561138e57600080fd5b843567ffffffffffffffff808211156113a657600080fd5b6113b28883890161132c565b909650945060208701359150808211156113cb57600080fd5b506113d88782880161132c565b95989497509550505050565b600080604083850312156113f757600080fd5b6114008361125e565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761143b5761143b61140e565b92915050565b60008261145e57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561143b5761143b61140e565b60006020828403121561148857600080fd5b81516112958161129c565b8082018082111561143b5761143b61140e565b6000602082840312156114b857600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000600182016114e7576114e761140e565b506001019056fea26469706673582212205bd1b916d5ac47c41b7ca870f205bba8c97b1644a6e164009dd136901ac6b7b164736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/RewardManager.sol:RewardManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2532,
        "contract": "contracts/RewardManager.sol:RewardManager",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 8555,
        "contract": "contracts/RewardManager.sol:RewardManager",
        "label": "mmToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)877"
      },
      {
        "astId": 8566,
        "contract": "contracts/RewardManager.sol:RewardManager",
        "label": "devWallet",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 8568,
        "contract": "contracts/RewardManager.sol:RewardManager",
        "label": "miningEngine",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 8581,
        "contract": "contracts/RewardManager.sol:RewardManager",
        "label": "playerTotalEarned",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 8585,
        "contract": "contracts/RewardManager.sol:RewardManager",
        "label": "playerBasicRewards",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 8589,
        "contract": "contracts/RewardManager.sol:RewardManager",
        "label": "playerCompletionBonuses",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 8592,
        "contract": "contracts/RewardManager.sol:RewardManager",
        "label": "rewardStats",
        "offset": 0,
        "slot": "8",
        "type": "t_struct(RewardStats)8577_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)877": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(RewardStats)8577_storage": {
        "encoding": "inplace",
        "label": "struct RewardManager.RewardStats",
        "members": [
          {
            "astId": 8570,
            "contract": "contracts/RewardManager.sol:RewardManager",
            "label": "totalBasicRewards",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 8572,
            "contract": "contracts/RewardManager.sol:RewardManager",
            "label": "totalCompletionBonuses",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 8574,
            "contract": "contracts/RewardManager.sol:RewardManager",
            "label": "totalDevFees",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 8576,
            "contract": "contracts/RewardManager.sol:RewardManager",
            "label": "totalDistributed",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}